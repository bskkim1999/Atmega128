#define F_CPU 16000000UL
#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include <stdio.h>
#include <string.h>
#include <util/atomic.h>
#include "UART0.h"

FILE OUTPUT = FDEV_SETUP_STREAM(UART0_transmit, NULL, _FDEV_SETUP_WRITE);
FILE INPUT = FDEV_SETUP_STREAM(NULL, UART0_receive, _FDEV_SETUP_READ);


volatile int count = 0;

//encoder
ISR(INT0_vect){
	
	
	count = count +1;
	
	//If there are 35 pulses?
	if(count == 35) {
		cli();   //decline interrupt(global)
		
	}
		
		
}

//interrupt (external)
void INIT_INT0(void){
	
	EIMSK = 0x01;   //external interrupt INT0(PD0)
	EICRA = 0x03;  //rising edge
	sei();  //global interrupt(accept)
	
	
	
}

int main(void){
	
	stdout = &OUTPUT;
	stdin = &INPUT;
	
	/*variable*/
	
	
	/*uart*/
	UART0_init();
	
	/*gpio*/
	
	DDRA = 0xff; //output
	
	/*timer&counter*/
	
	INIT_INT0();

	 
	/* Replace with your application code */
	while (1) {
		
		
		if(count == 35) break;
		
		
	}
	//check led if blink
	PORTA = 0xff;
	_delay_ms(500);
	PORTA = 0x00;
	_delay_ms(500);
	//printf("finish!");
	return 0;
}
